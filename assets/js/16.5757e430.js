(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{333:function(t,_,v){"use strict";v.r(_);var s=v(6),r=Object(s.a)({},(function(){var t=this,_=t._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h3",{attrs:{id:"有接口文档-无接口文档时-如何进行接口测试"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#有接口文档-无接口文档时-如何进行接口测试"}},[t._v("#")]),t._v(" 有接口文档/无接口文档时,如何进行接口测试")]),t._v(" "),_("p",[t._v("有接口文档：postman，jmeter")]),t._v(" "),_("p",[t._v("无接口文档：fiddler抓包，web端也可以直接F12（效率低，参数抓不完全）")]),t._v(" "),_("h3",{attrs:{id:"做借口测试需要的接口信息"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#做借口测试需要的接口信息"}},[t._v("#")]),t._v(" 做借口测试需要的接口信息")]),t._v(" "),_("ol",[_("li",[t._v("接口名称")]),t._v(" "),_("li",[t._v("接口访问地址")]),t._v(" "),_("li",[t._v("接口请求方式(get,post)")]),t._v(" "),_("li",[t._v("传入参数")]),t._v(" "),_("li",[t._v("服务器返回结果")])]),t._v(" "),_("h3",{attrs:{id:"get-post"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#get-post"}},[t._v("#")]),t._v(" GET&POST")]),t._v(" "),_("ol",[_("li",[t._v("get请求方式\n"),_("ul",[_("li",[t._v("http:主机地址:端口号/text/text_01/模块/接口名?参数1:XXX&参数2:XXX")])])]),t._v(" "),_("li",[t._v("post请求方式\n"),_("ul",[_("li",[t._v("http:主机地址:端口号/text/text_01/模块/接口名")]),t._v(" "),_("li",[t._v("body体:参数1:XXX&参数2:XXX")])])]),t._v(" "),_("li",[t._v("区别 get向服务器"),_("strong",[t._v("获取")]),t._v("数据 "),_("strong",[t._v("(快)")]),t._v(" 参数拼接在url中---不安全\npost向服务器"),_("strong",[t._v("传送")]),t._v("数据 "),_("strong",[t._v("(慢)")]),t._v(" 参数在body体中---安全")])]),t._v(" "),_("h3",{attrs:{id:"接口测试用例设计"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#接口测试用例设计"}},[t._v("#")]),t._v(" 接口测试用例设计")]),t._v(" "),_("p",[t._v("和正常功能用例设计思路一样")]),t._v(" "),_("ol",[_("li",[t._v("考虑接口的正常调用，输入正常参数，检查接口返回的响应结果跟接口文档预期是否一致，包括status(状态),code等")]),t._v(" "),_("li",[t._v("考虑接口的异常验证，类型，必填值，同步考虑边界等如传递类型错误，id支持整数是否支持小数or字符串，过大或为负数，接口是否能处理")]),t._v(" "),_("li",[t._v("业务规则验证，如权限不够无法修改其他任务")]),t._v(" "),_("li",[t._v("接口安全性验证，用户相关信息是否加密（查数据库）")]),t._v(" "),_("li",[t._v("接口性能测试")])])])}),[],!1,null,null,null);_.default=r.exports}}]);