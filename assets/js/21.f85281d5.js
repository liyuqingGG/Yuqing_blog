(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{338:function(v,_,t){"use strict";t.r(_);var r=t(6),a=Object(r.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"等价类划分"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#等价类划分"}},[v._v("#")]),v._v(" 等价类划分")]),v._v(" "),_("p",[_("strong",[v._v("概念")]),v._v("："),_("br"),v._v("\n等价类是把程序的输入域划分成若干个子集，然后从每个子集中选取有代表性的数据作为测试的输入")]),v._v(" "),_("ol",[_("li",[v._v("有效等价类")]),v._v(" "),_("li",[v._v("无效等价类")])]),v._v(" "),_("h2",{attrs:{id:"边界值"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#边界值"}},[v._v("#")]),v._v(" 边界值")]),v._v(" "),_("p",[v._v("2点法 3点法 4点法 仅有有效等价类"),_("br"),v._v("\n7点法 包含无效等价类")]),v._v(" "),_("h2",{attrs:{id:"场景法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#场景法"}},[v._v("#")]),v._v(" 场景法")]),v._v(" "),_("p",[v._v("如何使用场景法：")]),v._v(" "),_("ol",[_("li",[v._v("画出流程图\n"),_("ul",[_("li",[v._v("矩形：结果")]),v._v(" "),_("li",[v._v("菱形：判断")]),v._v(" "),_("li",[v._v("箭头：流向")])])]),v._v(" "),_("li",[v._v("遍历场景，提取测试用例\n"),_("ul",[_("li",[v._v("覆盖正常路线，提取正常路线涉及的用例")]),v._v(" "),_("li",[v._v("走每一个分支，提取正常路线未涉及的用例")]),v._v(" "),_("li",[v._v("出错步骤重新回到主流程，验证时要多往下走一个步骤\n重点："),_("br"),v._v("\n测试流程，流程没问题不代表功能没问题，还需要针对单步的功能进行细化测试"),_("br"),v._v("\n所以说，场景法只是补充测试，需要细化测试（等价类，边界值）+ 场景法才算充分的测试")])])])]),v._v(" "),_("h2",{attrs:{id:"错误推断"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#错误推断"}},[v._v("#")]),v._v(" 错误推断")]),v._v(" "),_("p",[v._v("基于经验和直觉推测程序中可能出现的错误"),_("br"),v._v("\n要素是：经验，知识，直觉")])])}),[],!1,null,null,null);_.default=a.exports}}]);